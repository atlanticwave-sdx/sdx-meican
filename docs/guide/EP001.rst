:EP: 1
:Title: CILogon Implementation
:Authors:
    - Usman Aziz
    - Mahidhar
:Reviewers: to be defined
:Created: to be defined
:Meican-Version: to be defined
:Status: Draft
:Type: Standards Track

******************************
EP001 - CILogon Implementation
******************************

########
Abstract
########
The focus of this blueprint is solely on integrating CILogon with Meican and implementing the associated security measures, such as token generation, storage, and expiration management within the 'meican_cilogon_auth' table.

##########
Motivation
##########
CILogon integration with Meican aims to enhance security measures by introducing an additional layer of protection beyond traditional username and password logins. This extra security is achieved through methods like two-factor authentication. By implementing CILogon, Meican can mitigate the risks associated with unauthorized access and potential data breaches.

#########
Rationale
#########

Justification for Design Choices
--------------------------------
   - **Enhanced Security**: CILogon integration strengthens security beyond traditional logins, mitigating risks like password theft.
   - **User Experience**: Balancing security with convenience, and access without frequent prompts within a two-day window was prioritized.

Consideration of Alternatives
------------------------------
   - **Authentication Methods**: Should we write something like this? (Evaluated OAuth, OAuth, and OAuth; CILogon was chosen for security and integration).
   - **Token Expiration**: Considered dynamic expiration but opted for a fixed two-day period for simplicity and security.

Related Work and Industry Standards
------------------------------------
   - **CILogon Integration**: Aligns with established standards in academic and research communities.
   - **Token-Based Authentication**: Follows industry-standard practices for scalability and interoperability.

Consideration of Future Scalability and Maintainability
--------------------------------------------------------
   - **Modular Design**: Dedicated table (meican_cilogon_auth) ensures scalability and easy integration.
   - **Token Workflow**: Automated token generation and expiration updates minimize maintenance overhead.


#############
Specification
#############

**The Idea:**

.. image:: /docs/CILogonFlow.png
   :alt: Alternative Text

**Specification:**

1. **CILogon Integration:** Integrate CILogon authentication with Meican's topology mapping system [1].
2. **Database Table Creation:** Create a new table named "meican_cilogon_auth" to store essential data such as user tokens, expiration dates, and user IDs.
3. **Token Generation and Insertion:** Upon successful login with CILogon, generate a new token with a two-day expiration period and insert it into the "meican_cilogon_auth" table.
4. **Access Management:** Allow users to access Meican without prompting for CILogon login if they login within the two-day validity period of the token.
5. **Expiration Handling:** If a user attempts to log in after the token expiration period (two days), prompt for CILogon login again. Next, update the token and expiration date in the "meican_cilogon_auth" table accordingly.
6. **Migration File Creation:** Created a migration file for the "meican_cilogon_auth" table.
7. **Removing CILogon for Master User:** We made sure that CI-Logon will not get prompted for the master user explicitly, and similarly we can do the same for any other criteria based on the requirements.

**Token Expiration Workflow:**

1. When a user logs in with CILogon, the system generates a new token and stores it in the "meican_cilogon_auth" table, along with the user's ID and an expiration date set to two days from the current timestamp.
2. If the same user logs in within the two-day window, they won't be prompted for CILogon authentication again.
3. However, if the user attempts to log in after the expiration period (two days), the system will require them to go through the CILogon authentication process again.


This comprehensive approach ensures the CILogon integration with Meican effectively while managing token expiration and user authentication seamlessly.

#######################
Backward Compatibility
#######################
N/A

#####################
Security Implications
#####################
N/A

##############
Rejected Ideas
##############
N/A

##########
References
##########
[1] https://www.cilogon.org/oidc

#########
Copyright
#########
This document is placed in the public domain or under the CC0-1.0-Universal license, whichever is more permissive.
